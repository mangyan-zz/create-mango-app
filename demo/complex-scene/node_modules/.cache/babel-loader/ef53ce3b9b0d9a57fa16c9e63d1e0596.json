{"ast":null,"code":"import easingTypes from 'tween-functions';\nimport requestAnimationFrame from 'raf';\nimport EventListener from './EventDispatcher';\nimport { currentScrollTop } from './util';\nimport mapped from './Mapped'; // 设置默认数据\n\nfunction defaultData(vars) {\n  return {\n    ease: vars.ease || 'easeInOutQuad',\n    duration: vars.duration || 450,\n    docHeight: vars.docHeight,\n    scrollInterval: vars.scrollInterval || 1000,\n    loop: vars.loop || false\n  };\n}\n\nvar ScrollScreen = {\n  init: function init(vars) {\n    var _this = this;\n\n    this.vars = defaultData(vars || {});\n    this.rafID = -1;\n    this.toHeight = -1;\n    this.num = 0; // this.currentNum = 0;\n\n    ['raf', 'cancelRequestAnimationFrame', 'onWheel', 'startScroll', 'isScroll'].forEach(function (method) {\n      _this[method] = _this[method].bind(_this);\n    });\n    EventListener.addEventListener('wheel.scrollWheel', this.onWheel); // 刚进入时滚动条位置\n\n    setTimeout(this.startScroll);\n  },\n  startScroll: function startScroll() {\n    var _this2 = this;\n\n    var _mapped = mapped.getMapped();\n\n    var _arr = _mapped.__arr;\n\n    if (!_arr.length) {\n      EventListener.removeEventListener('wheel.scrollWheel', this.onWheel);\n      return;\n    }\n\n    this.scrollTop = currentScrollTop();\n\n    _arr.forEach(function (str, i) {\n      var dom = _mapped[str];\n      var domOffsetTop = dom.offsetTop;\n      var domHeight = dom.getBoundingClientRect().height;\n\n      if (_this2.scrollTop >= domOffsetTop && _this2.scrollTop < domOffsetTop + domHeight) {\n        _this2.num = i;\n        _this2.toHeight = domOffsetTop;\n      }\n    }); // 如果 toHeight === -1 且 this.scrollTop 有值时；\n\n\n    if (this.toHeight === -1) {\n      if (this.scrollTop > 0) {\n        var endDom = mapped.get(mapped.getMapped().__arr[mapped.getMapped().__arr.length - 1]);\n        var windowHeight = document.documentElement.clientHeight;\n        var tooNum = Math.ceil((this.scrollTop - endDom.offsetTop - endDom.getBoundingClientRect().height) / windowHeight);\n        this.num = mapped.getMapped().__arr.length + tooNum;\n      }\n\n      return;\n    }\n\n    if (this.toHeight !== this.scrollTop) {\n      this.initTime = Date.now();\n      this.rafID = requestAnimationFrame(this.raf);\n    } else {\n      this.toHeight = -1;\n    }\n  },\n  raf: function raf() {\n    var _this3 = this;\n\n    var duration = this.vars.duration;\n    var now = Date.now();\n    var progressTime = now - this.initTime > duration ? duration : now - this.initTime;\n    var easeValue = easingTypes[this.vars.ease](progressTime, this.scrollTop, this.toHeight, duration);\n    window.scrollTo(window.scrollX, easeValue);\n\n    if (progressTime === duration) {\n      this.cancelRequestAnimationFrame();\n      setTimeout(function () {\n        _this3.toHeight = -1;\n      }, this.vars.scrollInterval);\n    } else {\n      this.rafID = requestAnimationFrame(this.raf);\n    }\n  },\n  cancelRequestAnimationFrame: function cancelRequestAnimationFrame() {\n    requestAnimationFrame.cancel(this.rafID);\n    this.rafID = -1;\n  },\n  getComputedStyle: function getComputedStyle(dom) {\n    return document.defaultView ? document.defaultView.getComputedStyle(dom) : {};\n  },\n  isScroll: function isScroll(dom) {\n    var style = this.getComputedStyle(dom);\n    var overflow = style.overflow;\n    var overflowY = style.overflowY;\n    var isScrollOverflow = overflow === 'auto' || overflow === 'scroll' || overflow === 'overlay' || overflowY === 'auto' || overflowY === 'scroll' || overflowY === 'overlay';\n\n    if (dom === document.body) {\n      return false;\n    } else if (dom.scrollHeight > dom.offsetHeight && isScrollOverflow && dom.scrollTop < dom.scrollHeight) {\n      return true;\n    }\n\n    return this.isScroll(dom.parentNode);\n  },\n  onWheel: function onWheel(e) {\n    var _this4 = this;\n\n    var _mapped = mapped.getMapped();\n\n    if (!_mapped.__arr.length) {\n      EventListener.removeEventListener('wheel.scrollWheel', this.onWheel);\n      return;\n    }\n\n    if (this.isScroll(e.target)) {\n      return;\n    }\n\n    var deltaY = e.deltaY;\n    e.preventDefault();\n\n    if (this.rafID === -1 && deltaY !== 0 && this.toHeight === -1) {\n      // 如果滚动条托动过了，需要获取当前的num;\n      var _arr = _mapped.__arr;\n      var endDom = mapped.get(_arr[_arr.length - 1]);\n      var startDom = mapped.get(_arr[0]);\n      var windowHeight = document.documentElement.clientHeight;\n      this.scrollTop = currentScrollTop();\n\n      _arr.forEach(function (str, i) {\n        var dom = _mapped[str];\n        var domOffsetTop = dom.offsetTop;\n        var domHeight = dom.getBoundingClientRect().height;\n\n        if (_this4.scrollTop >= domOffsetTop && _this4.scrollTop < domOffsetTop + domHeight) {\n          _this4.num = i;\n        }\n      });\n\n      var startManyHeight = startDom.offsetTop;\n      var startManyScale = startManyHeight ? Math.ceil(startManyHeight / windowHeight) : 0;\n      var tooNum = void 0;\n\n      if (this.scrollTop > endDom.offsetTop + endDom.getBoundingClientRect().height) {\n        tooNum = Math.ceil((this.scrollTop - endDom.offsetTop - endDom.getBoundingClientRect().height) / windowHeight);\n        this.num = _arr.length + tooNum;\n      } else if (this.scrollTop < startDom.offsetTop) {\n        tooNum = Math.ceil(-(this.scrollTop - startManyHeight) / windowHeight);\n        this.num = -tooNum;\n      }\n\n      if (deltaY < 0) {\n        this.num--;\n      } else if (deltaY > 0) {\n        this.num++;\n      }\n\n      var docHeight = this.vars.docHeight || document.body.scrollHeight;\n      var manyHeight = docHeight - endDom.offsetTop - endDom.getBoundingClientRect().height;\n      var manyScale = manyHeight ? Math.ceil(manyHeight / windowHeight) : 0;\n      var maxNum = _arr.length + manyScale;\n\n      if (this.vars.loop) {\n        this.num = this.num < -startManyScale ? maxNum - 1 : this.num;\n        this.num = this.num >= maxNum ? -startManyScale : this.num;\n      } else {\n        this.num = this.num <= -startManyScale ? -startManyScale : this.num;\n        this.num = this.num >= maxNum ? maxNum : this.num;\n      }\n\n      this.initTime = Date.now();\n      var currentDom = mapped.get(mapped.getMapped().__arr[this.num]);\n      this.toHeight = currentDom ? currentDom.offsetTop : null;\n      this.toHeight = typeof this.toHeight !== 'number' ? endDom.offsetTop + endDom.getBoundingClientRect().height + windowHeight * (this.num - mapped.getMapped().__arr.length) : this.toHeight;\n      this.toHeight = this.toHeight < 0 ? 0 : this.toHeight;\n      this.toHeight = this.toHeight > docHeight - windowHeight ? docHeight - windowHeight : this.toHeight;\n      this.rafID = requestAnimationFrame(this.raf);\n      this.currentNum = this.num;\n    }\n  },\n  unMount: function unMount() {\n    EventListener.removeEventListener('wheel.scrollWheel', this.onWheel);\n  }\n};\nexport default {\n  init: ScrollScreen.init.bind(ScrollScreen),\n  unMount: ScrollScreen.unMount.bind(ScrollScreen)\n};","map":null,"metadata":{},"sourceType":"module"}