{"ast":null,"code":"/**\n * Created by zhongzihuan on 2018/11/15.\n * 路由工具管理者\n * （路由库选择）\n *  react-router、react-navigation\n *\n * 所有的路由管理者都是一个对象，拥有着通用的属性和方法来处理前端涉及到的路由问题\n * 基本保持与history相同的API，处理通用性前端路由管理\n *\n *  监听:采用观察者模式，location改变时，history会发出通知\n */\nvar RouterUtils = {\n  history: null,\n\n  /**\n   * 路由跳转到指定界面\n   * 不传参——>直接加上路由名称\n   * 传递参数\n   */\n  push: function push(path, params) {\n    this.history.push(path + '?' + this.urlEncode(params));\n  },\n\n  /**\n   *\n   */\n  replace: function replace(path) {\n    this.history.replace(path);\n  },\n\n  /**\n   * 返回上一页\n   * @param props\n   */\n  goBack: function goBack() {\n    this.history.goBack();\n  },\n\n  /**\n   * 向前一页\n   * @param props\n   */\n  goForward: function goForward() {\n    this.history.goForward();\n  },\n  listen: function listen(router, callBack) {\n    router.listen(callBack);\n  },\n\n  /**\n   * 获取传递参数\n   */\n  getParams: function getParams() {\n    var ret = {};\n    var history = this.history;\n\n    if (history.location.search.includes('?')) {\n      var params = history.location.search.split('?')[1].split('&');\n\n      for (var i = 0; i < params.length; i++) {\n        var paramKey = params[i].split('=')[0];\n        var paramVal = params[i].split('=')[1];\n        ret[paramKey] = paramVal;\n      }\n    }\n\n    return ret;\n  },\n\n  /**\n   * URL解析\n   * @param param\n   * @param key\n   * @param encod\n   * @returns {string}\n   */\n  urlEncode: function urlEncode(param, key, encode) {\n    if (param == null) return '';\n    var paramStr = '';\n    var t = typeof param;\n\n    if (t == 'string' || t == 'number' || t == 'boolean') {\n      paramStr += '&' + key + '=' + (encode == null || encode ? encodeURIComponent(param) : param);\n    } else {\n      for (var i in param) {\n        var k = key == null ? i : key + (param instanceof Array ? '[' + i + ']' : '.' + i);\n        paramStr += this.urlEncode(param[i], k, encode);\n      }\n    }\n\n    return paramStr;\n  }\n};\nexport default RouterUtils;","map":null,"metadata":{},"sourceType":"module"}