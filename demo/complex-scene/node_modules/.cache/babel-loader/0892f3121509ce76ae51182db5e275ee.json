{"ast":null,"code":"import _regeneratorRuntime from \"/Users/zhongzihuan/workplace-aijia/npm-lib/create-mango-app/demo/complex-scene/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"/Users/zhongzihuan/workplace-aijia/npm-lib/create-mango-app/demo/complex-scene/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/zhongzihuan/workplace-aijia/npm-lib/create-mango-app/demo/complex-scene/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\n/**\n * mangyan\n */\nvar SHOW = '@@DVA_LOADING/SHOW';\nvar HIDE = '@@DVA_LOADING/HIDE';\nvar NAMESPACE = 'loading';\n\nfunction createLoading() {\n  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var namespace = opts.namespace || NAMESPACE;\n  var _opts$only = opts.only,\n      only = _opts$only === void 0 ? [] : _opts$only,\n      _opts$except = opts.except,\n      except = _opts$except === void 0 ? [] : _opts$except;\n\n  if (only.length > 0 && except.length > 0) {\n    throw Error('It is ambiguous to configurate `only` and `except` items at the same time.');\n  }\n\n  var initialState = {\n    global: false,\n    models: {},\n    effects: {}\n  };\n\n  var extraReducers = _defineProperty({}, namespace, function () {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n\n    var _ref = arguments.length > 1 ? arguments[1] : undefined,\n        type = _ref.type,\n        payload = _ref.payload;\n\n    var _ref2 = payload || {},\n        namespace = _ref2.namespace,\n        actionType = _ref2.actionType;\n\n    var ret;\n\n    switch (type) {\n      case SHOW:\n        ret = _objectSpread({}, state, {\n          global: true,\n          models: _objectSpread({}, state.models, _defineProperty({}, namespace, true)),\n          effects: _objectSpread({}, state.effects, _defineProperty({}, actionType, true))\n        });\n        break;\n\n      case HIDE:\n        // eslint-disable-line\n        var effects = _objectSpread({}, state.effects, _defineProperty({}, actionType, false));\n\n        var models = _objectSpread({}, state.models, _defineProperty({}, namespace, Object.keys(effects).some(function (actionType) {\n          var _namespace = actionType.split('/')[0];\n          if (_namespace !== namespace) return false;\n          return effects[actionType];\n        })));\n\n        var global = Object.keys(models).some(function (namespace) {\n          return models[namespace];\n        });\n        ret = _objectSpread({}, state, {\n          global: global,\n          models: models,\n          effects: effects\n        });\n        break;\n\n      default:\n        ret = state;\n        break;\n    }\n\n    return ret;\n  });\n\n  function onEffect(effect, _ref3, model, actionType) {\n    var put = _ref3.put;\n    var namespace = model.namespace;\n\n    if (only.length === 0 && except.length === 0 || only.length > 0 && only.indexOf(actionType) !== -1 || except.length > 0 && except.indexOf(actionType) === -1) {\n      return (\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee() {\n          var _args = arguments;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return put({\n                    type: SHOW,\n                    payload: {\n                      namespace: namespace,\n                      actionType: actionType\n                    }\n                  });\n\n                case 2:\n                  _context.next = 4;\n                  return effect.apply(void 0, _args);\n\n                case 4:\n                  _context.next = 6;\n                  return put({\n                    type: HIDE,\n                    payload: {\n                      namespace: namespace,\n                      actionType: actionType\n                    }\n                  });\n\n                case 6:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        })\n      );\n    } else {\n      return effect;\n    }\n  }\n\n  return {\n    extraReducers: extraReducers,\n    onEffect: onEffect\n  };\n}\n\nexport default createLoading;","map":null,"metadata":{},"sourceType":"module"}