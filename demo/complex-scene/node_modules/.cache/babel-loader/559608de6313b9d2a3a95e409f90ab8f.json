{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport ReactDom from 'react-dom';\nimport PropTypes from 'prop-types';\nimport easingTypes from 'tween-functions';\nimport Timeline from 'rc-tween-one/es/Tween';\nimport ticker from 'rc-tween-one/es/ticker';\nimport EventListener from './EventDispatcher';\nimport { noop, dataToArray, objectEqual, currentScrollTop, windowHeight } from './util';\nvar tickerId = 0;\n\nfunction playScaleToArray(playScale) {\n  if (Array.isArray(playScale)) {\n    if (playScale.length === 2) {\n      return playScale;\n    }\n\n    return [playScale[0] || 0, playScale[1] || 1];\n  } else if (playScale) {\n    return [playScale, 1];\n  }\n\n  return [0, 1];\n}\n\nvar ScrollParallax = function (_React$Component) {\n  _inherits(ScrollParallax, _React$Component);\n\n  function ScrollParallax(props) {\n    _classCallCheck(this, ScrollParallax);\n\n    var _this = _possibleConstructorReturn(this, (ScrollParallax.__proto__ || Object.getPrototypeOf(ScrollParallax)).call(this, props));\n\n    _this.setDefaultData = function (_vars) {\n      var vars = dataToArray(_vars);\n\n      var varsForIn = function varsForIn(item, i) {\n        var playScale = playScaleToArray(item.playScale).map(function (data) {\n          return data * _this.clientHeight;\n        });\n\n        var aItem = _extends({}, item);\n\n        delete aItem.playScale;\n\n        var cItem = _extends({}, item);\n\n        delete cItem.playScale;\n        cItem.delay = playScale[0];\n        aItem.delay = playScale[0];\n        cItem.duration = playScale[1] - playScale[0];\n        aItem.duration = playScale[1] - playScale[0];\n        cItem.onStart = null;\n        cItem.onUpdate = null;\n        cItem.onComplete = null;\n        cItem.onRepeat = null;\n        aItem.onStart = aItem.onStart || noop;\n        aItem.onComplete = aItem.onComplete || noop;\n        aItem.onUpdate = aItem.onUpdate || noop;\n        aItem.onStartBack = aItem.onStartBack || noop;\n        aItem.onCompleteBack = aItem.onCompleteBack || noop;\n        _this.defaultTweenData[i] = cItem;\n        _this.defaultData[i] = aItem;\n      };\n\n      vars.forEach(varsForIn);\n    };\n\n    _this.resizeEventListener = function () {\n      _this.scrollTop = currentScrollTop();\n      _this.target = _this.props.targetId && document.getElementById(_this.props.targetId);\n      _this.clientHeight = _this.target ? _this.target.clientHeight : windowHeight();\n\n      _this.setDefaultData(_this.props.animation || {});\n\n      if (_this.timeline) {\n        _this.timeline.resetDefaultStyle();\n      }\n\n      _this.timeline = new Timeline(_this.dom, _this.defaultTweenData, {});\n\n      _this.scrollEventListener();\n    };\n\n    _this.scrollEventListener = function () {\n      var scrollTop = _this.target ? _this.target.scrollTop : currentScrollTop();\n      _this.clientHeight = _this.target ? _this.target.clientHeight : windowHeight();\n      var dom = _this.props.location ? document.getElementById(_this.props.location) : _this.dom;\n\n      if (!dom) {\n        throw new Error('\"location\" is null');\n      }\n\n      var targetTop = _this.target ? _this.target.getBoundingClientRect().top : 0;\n      var offsetTop = dom.getBoundingClientRect().top + scrollTop - targetTop;\n      var elementShowHeight = scrollTop - offsetTop + _this.clientHeight;\n      var currentShow = _this.scrollTop - offsetTop + _this.clientHeight;\n\n      _this.defaultData.forEach(function (item) {\n        var noUpdate = void 0;\n\n        if (elementShowHeight <= item.delay) {\n          if (!_this.onCompleteBackBool && _this.onStartBool) {\n            _this.onCompleteBackBool = true;\n            noUpdate = true;\n            item.onCompleteBack();\n          }\n        } else {\n          _this.onCompleteBackBool = false;\n        }\n\n        if (elementShowHeight >= item.delay) {\n          if (!_this.onStartBool) {\n            _this.onStartBool = true;\n            noUpdate = true;\n            item.onStart();\n          }\n        } else {\n          _this.onStartBool = false;\n        }\n\n        if (elementShowHeight <= item.delay + item.duration) {\n          if (!_this.onStartBackBool && _this.onCompleteBool) {\n            _this.onStartBackBool = true;\n            noUpdate = true;\n            item.onStartBack();\n          }\n        } else {\n          _this.onStartBackBool = false;\n        }\n\n        if (elementShowHeight >= item.delay + item.duration) {\n          if (!_this.onCompleteBool) {\n            _this.onCompleteBool = true;\n            noUpdate = true;\n            item.onComplete();\n          }\n        } else {\n          _this.onCompleteBool = false;\n        }\n\n        if (elementShowHeight >= item.delay && elementShowHeight <= item.delay + item.duration && !noUpdate) {\n          item.onUpdate(elementShowHeight / (item.delay + item.duration));\n        }\n      });\n\n      ticker.clear(_this.tickerId);\n      _this.tickerId = 'scrollParallax' + Date.now() + '-' + tickerId;\n      tickerId++;\n\n      if (tickerId >= Number.MAX_VALUE) {\n        tickerId = 0;\n      }\n\n      var startFrame = ticker.frame;\n      ticker.wake(_this.tickerId, function () {\n        var moment = (ticker.frame - startFrame) * ticker.perFrame;\n        var ratio = easingTypes.easeOutQuad(moment, 0.08, 1, 300);\n\n        _this.timeline.frame(currentShow + ratio * (elementShowHeight - currentShow));\n\n        if (moment >= 300) {\n          ticker.clear(_this.tickerId);\n        }\n      });\n      _this.scrollTop = scrollTop; // 如果不一直靠滚动来执行动画，always=false而且动画全执行完了，，删除scrollEvent;\n\n      if (_this.onCompleteBool && _this.eventType && !_this.props.always) {\n        EventListener.removeEventListener(_this.eventType, _this.scrollEventListener, _this.target);\n      }\n    };\n\n    _this.scrollTop = 0;\n    _this.defaultTweenData = [];\n    _this.defaultData = [];\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(ScrollParallax, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.dom = ReactDom.findDOMNode(this);\n      var date = Date.now();\n      var length = EventListener._listeners.scroll ? EventListener._listeners.scroll.length : 0;\n      this.eventType = 'scroll.scrollEvent' + date + length;\n      this.eventResize = 'resize.resizeEvent' + date + length;\n      this.resizeEventListener();\n      EventListener.addEventListener(this.eventResize, this.resizeEventListener, this.target); // 预注册;\n\n      this.timeline.frame(0);\n      this.scrollEventListener();\n      EventListener.addEventListener(this.eventType, this.scrollEventListener, this.target);\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var equal = objectEqual(this.props.animation, nextProps.animation);\n\n      if (!equal) {\n        this.setDefaultData(nextProps.animation || {});\n        this.timeline.resetAnimData();\n        this.timeline.setDefaultData(this.defaultTweenData);\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      EventListener.removeEventListener(this.eventType, this.scrollEventListener, this.target);\n      EventListener.removeEventListener(this.eventResize, this.resizeEventListener, this.target);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var props = _extends({}, this.props);\n\n      var componentProps = props.componentProps;\n      ['animation', 'always', 'component', 'location', 'id', 'targetId', 'componentProps'].forEach(function (key) {\n        return delete props[key];\n      });\n\n      var style = _extends({}, props.style);\n\n      Object.keys(style).forEach(function (p) {\n        if (p.indexOf('filter') >= 0 || p.indexOf('Filter') >= 0) {\n          // ['Webkit', 'Moz', 'Ms', 'ms'].forEach(prefix=> style[`${prefix}Filter`] = style[p]);\n          var transformArr = ['Webkit', 'Moz', 'Ms', 'ms'];\n\n          for (var i = 0; i < transformArr.length; i++) {\n            style[transformArr[i] + 'Filter'] = style[p];\n          }\n        }\n      });\n      props.style = style;\n      return React.createElement(this.props.component, _extends({}, props, componentProps));\n    }\n  }]);\n\n  return ScrollParallax;\n}(React.Component);\n\nScrollParallax.propTypes = {\n  component: PropTypes.any,\n  animation: PropTypes.any,\n  always: PropTypes.bool,\n  location: PropTypes.string,\n  children: PropTypes.any,\n  className: PropTypes.string,\n  style: PropTypes.any,\n  id: PropTypes.string,\n  targetId: PropTypes.string,\n  componentProps: PropTypes.object\n};\nScrollParallax.defaultProps = {\n  component: 'div',\n  always: true,\n  componentProps: {}\n};\nScrollParallax.isScrollParallax = true;\nexport default ScrollParallax;","map":null,"metadata":{},"sourceType":"module"}